{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\n\nconst reducer = (state, action) => {\n  if (action.type === \"setVote\") {\n    return { ...state,\n      posts: action.posts\n    };\n  } else if (action.type === \"changeOrder\") {\n    return { ...state,\n      posts: action.posts,\n      desBut: action.desBut,\n      ascBut: action.ascBut\n    };\n  }\n\n  return state;\n};\n\nconst logger = store => next => action => {\n  console.log('dispatching', action);\n  let result = next(action);\n  console.log('next state', store.getState());\n  return result;\n};\n\nexport default createStore(reducer, applyMiddleware(logger));","map":{"version":3,"sources":["/home/user/Documentos/post-mas-votados/src/store.js"],"names":["createStore","applyMiddleware","reducer","state","action","type","posts","desBut","ascBut","logger","store","next","console","log","result","getState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;;AAGA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,MAAIA,MAAM,CAACC,IAAP,KAAgB,SAApB,EAA+B;AAC3B,WAAO,EACH,GAAGF,KADA;AAEHG,MAAAA,KAAK,EAAEF,MAAM,CAACE;AAFX,KAAP;AAIH,GALD,MAKO,IAAIF,MAAM,CAACC,IAAP,KAAgB,aAApB,EAAmC;AACtC,WAAO,EACH,GAAGF,KADA;AAEHG,MAAAA,KAAK,EAAEF,MAAM,CAACE,KAFX;AAGHC,MAAAA,MAAM,EAAEH,MAAM,CAACG,MAHZ;AAIHC,MAAAA,MAAM,EAAEJ,MAAM,CAACI;AAJZ,KAAP;AAMH;;AACD,SAAOL,KAAP;AACH,CAfD;;AAiBA,MAAMM,MAAM,GAAGC,KAAK,IAAIC,IAAI,IAAIP,MAAM,IAAI;AACtCQ,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BT,MAA3B;AACA,MAAIU,MAAM,GAAGH,IAAI,CAACP,MAAD,CAAjB;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,KAAK,CAACK,QAAN,EAA1B;AACA,SAAOD,MAAP;AACD,CALH;;AAOA,eAAed,WAAW,CAACE,OAAD,EAAUD,eAAe,CAACQ,MAAD,CAAzB,CAA1B","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\n\n\nconst reducer = (state, action) => {\n    if (action.type === \"setVote\") {\n        return {\n            ...state,\n            posts: action.posts\n        }\n    } else if (action.type === \"changeOrder\") {\n        return {\n            ...state,\n            posts: action.posts,\n            desBut: action.desBut,\n            ascBut: action.ascBut\n        }\n    }\n    return state;\n}\n\nconst logger = store => next => action => {\n    console.log('dispatching', action)\n    let result = next(action)\n    console.log('next state', store.getState())\n    return result\n  }\n\nexport default createStore(reducer, applyMiddleware(logger));\n"]},"metadata":{},"sourceType":"module"}