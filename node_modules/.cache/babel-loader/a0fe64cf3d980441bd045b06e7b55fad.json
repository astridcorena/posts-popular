{"ast":null,"code":"var _jsxFileName = \"/home/user/Documentos/post-mas-votados/src/components/Posts.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col, Image } from 'react-bootstrap';\nimport { sumVote, restVote } from '../actionCreators';\nconst style = {\n  imageContainer: {\n    'paddingLeft': '0',\n    'paddingRight': '0'\n  },\n  image: {\n    'height': '100px',\n    'width': '160px',\n    'marginTop': '20px'\n  },\n  votesContainer: {\n    'paddingLeft': '35px',\n    'marginTop': '35px'\n  },\n  colorText: {\n    'color': 'gray'\n  },\n  avatarImage: {\n    'height': '35px'\n  }\n};\n\nconst PostList = ({\n  posts,\n  sumVote,\n  restVote\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, posts.map(post => /*#__PURE__*/React.createElement(Row, {\n    key: post.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    style: style.imageContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: post.post_image_url,\n    alt: post.title,\n    style: style.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 1,\n    style: style.votesContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    role: \"button\",\n    onClick: () => sumVote(post),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"glyphicon glyphicon-chevron-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 72\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }, post.votes), /*#__PURE__*/React.createElement(\"a\", {\n    role: \"button\",\n    onClick: () => restVote(post),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"glyphicon glyphicon-chevron-down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 73\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: post.url,\n    target: \"blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 33\n    }\n  }, post.title))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  }, post.description)), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: style.colorText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }\n  }, \"Escrito por: \", /*#__PURE__*/React.createElement(Image, {\n    style: style.avatarImage,\n    src: post.writer_avatar_url,\n    circle: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 69\n    }\n  })))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    sumVote(post) {\n      dispatch(sumVote(post));\n    },\n\n    restVote(post) {\n      dispatch(restVote(post));\n    }\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostList);","map":{"version":3,"sources":["/home/user/Documentos/post-mas-votados/src/components/Posts.js"],"names":["React","connect","Row","Col","Image","sumVote","restVote","style","imageContainer","image","votesContainer","colorText","avatarImage","PostList","posts","map","post","id","post_image_url","title","votes","url","description","writer_avatar_url","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col, Image } from 'react-bootstrap';\nimport { sumVote, restVote } from '../actionCreators';\n\nconst style = {\n    imageContainer: {\n        'paddingLeft': '0',\n        'paddingRight': '0'\n    },\n    image: {\n        'height': '100px',\n        'width': '160px',\n        'marginTop': '20px'\n    },\n    votesContainer: {\n        'paddingLeft': '35px',\n        'marginTop': '35px'\n    },\n    colorText: {\n        'color': 'gray'\n    },\n    avatarImage: {\n        'height': '35px'\n    }\n}\n\nconst PostList = ({ posts, sumVote, restVote }) => {\n    return (\n        <div>\n            {posts.map(post =>\n                <Row key={post.id}>\n                    <Col md={2} style={style.imageContainer}>\n                        <img src={post.post_image_url} alt={post.title} style={style.image}/>\n                    </Col>\n                    <Col md={1} style={style.votesContainer}>\n                        <a role=\"button\" onClick={() => sumVote(post)}><span className=\"glyphicon glyphicon-chevron-up\" /></a>\n                        <p>{post.votes}</p>\n                        <a role=\"button\" onClick={() => restVote(post)}><span className=\"glyphicon glyphicon-chevron-down\" /></a>\n                    </Col>\n                    <Col md={8}>\n                        <Row>\n                            <h3><a href={post.url} target=\"blank\">{post.title}</a></h3>\n                        </Row>\n                        <Row>\n                            <p>{post.description}</p>\n                        </Row>\n                        <Row>\n                            <p style={style.colorText}>Escrito por: <Image style={style.avatarImage} src={post.writer_avatar_url} circle/></p>\n                        </Row>\n                    </Col>\n                </Row>\n            )}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        posts: state.posts\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        sumVote(post){\n            dispatch(sumVote(post));\n        },\n        restVote(post){\n            dispatch(restVote(post));\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostList);\n"]},"metadata":{},"sourceType":"module"}